name: Release 

on: workflow_dispatch

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Generate token
      id: generate_token
      uses: tibdex/github-app-token@v1
      with:
        app_id: ${{ secrets.APP_ID }}
        private_key: ${{ secrets.APP_PRIVATE_KEY }}
      
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ steps.generate_token.outputs.token }}
    
    - name: Cache cargo and build files
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/
          ~/.cargo/git/
          target/
        key: ${{ runner.os }}-cargo
        restore-keys: |
          ${{ runner.os }}-cargo
    
    - name: Get Next Version
      id: semver
      uses: ietf-tools/semver-action@v1
      with:
        token: ${{ steps.generate_token.outputs.token }}
        branch: main
        majorList: major
        patchList: chore, fix, bugfix, perf, refactor, test, tests
    
    - name: Update Cargo.toml Version
      run: |
        VERSION="${{ steps.semver.outputs.next }}"
        VERSION_CLEAN="${VERSION#v}"  # Remove leading 'v' if present
        sed -i "s/^version = .*/version = \"$VERSION_CLEAN\"/" Cargo.toml
        
    - name: Run tests
      run: cargo test
      
    - name: Build Release
      run: cargo build --release

    - name: Verify Release Binary
      run: |
        BINARY_PATH="target/release/ridi-router"
        if [[ ! -f "$BINARY_PATH" ]]; then
          echo "Error: Release binary not found at $BINARY_PATH"
          exit 1
        fi
      
    - name: Generate Release Notes
      run: |
        git log $(git describe --tags --abbrev=0 2>/dev/null || echo HEAD^)..HEAD --pretty=format:"* %s" > RELEASE_NOTES.md
        
    - name: Commit Version Update
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add Cargo.toml
        git add Cargo.lock
        git diff --staged --quiet || git commit -m "chore: bump version to ${{ steps.semver.outputs.next }}"
        git push origin main

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.semver.outputs.next }}
        name: Release ${{ steps.semver.outputs.next }}
        body_path: RELEASE_NOTES.md
        files: |
          target/release/ridi-router
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        
