name: Build all-features and test

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        targets: x86_64-unknown-linux-gnu
        toolchain: stable

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        run_install: false

    - name: Normalize Cargo.toml and Cargo.lock versions for caching
      run: |
        cp Cargo.toml _cargo.toml
        cp Cargo.lock _cargo.lock
        sed -i 's/^version = ".*"/version = "0.0.0"/' _cargo.toml
        sed -i '/^name = "ridi-router"$/,/^version = ".*"$/ s/^version = ".*"/version = "0.0.0"/' _cargo.lock
      shell: bash

    - name: Cache cargo and build files
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/
          ~/.cargo/git/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/_cargo.lock', '**/_cargo.toml', 'rust-toolchain.toml') }}---all-features
        restore-keys: |
          ${{ runner.os }}-cargo-${{ hashFiles('**/_cargo.lock', '**/_cargo.toml', 'rust-toolchain.toml') }}---all-features

    - name: Cache pnpm
      uses: actions/cache@v4
      with:
        path: |
          ~/.local/share/pnpm/store
          src/debug/viewer/ui/node_modules
        key: ${{ runner.os }}-pnpm
        restore-keys: |
          ${{ runner.os }}-pnpm

    - name: Install node_modules
      run: |
        cd src/debug/viewer/ui/
        pnpm install

    - name: Build UI
      run: |
        cd src/debug/viewer/ui/
        pnpm build

    - name: Run clippy
      run: cargo clippy

    - name: Run tests
      run: cargo test

    - name: Run check
      run: cargo check

    - name: Run cargo build
      run: cargo build --all-features
